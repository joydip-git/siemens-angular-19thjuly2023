1. service and dependency injection
		a. how to create a service
		b. how to register a service
			 - Injector
			 - provider
		c. how to consume a service
		d. how to create token-based custom service provider and @Inject() decorator
		e. role of interface for loose coupling
		f. @Injectable() decorator for service (*)

2. structural directives
		- *ngIf, *ngFor, *ngSwitch

3. Pipe
		a. using built-in pipes: uppercase, lowercase, currency, symbol, async
		b. create custom pipe

4. component lifecycle

5. passing data between components:
		a. passing data between parent and nested
		b. passing data between tow routed components (navigation from one to another component)
		c. passing data between any two components (rxjs)

6. Making HTTP requests
		- HttpClientModule
		- HttpClient service class and its methods get(), post() etc..
		- Observable, Observer, Subscription etc.

7. Forms
		- template driven form
		- Reactive Form

